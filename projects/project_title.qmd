---
title: "Gene Dosage Effects of Chromosome 12 Trisomy in Human Induced Pluripotent Stem Cells (iPSCs)"
author:
  - name: "Fahmida Sultana"
    affiliation: "Department of Cell Biology, OUHSC"
date: 2025-07-28
format:
  html:
    toc: true
    toc-location: right
    toc-depth: 2
    number-sections: false
    theme: default
    css: styles.scss

execute:
  echo: true
  
---
## **Project Overview**

Aneuploidy, the presence of an abnormal number of chromosomes, is a common genomic alteration observed in both developmental disorders and cancer. While most aneuploidies are detrimental to cellular function, some specific chromosomal gains may confer selective growth advantages in certain contexts. Human induced pluripotent stem cells (iPSCs) serve as a powerful model system to study the effects of aneuploidy due to their self-renewal capacity and potential for differentiation.

In this project, we focus on trisomy of chromosome 12 (T12), a frequently observed aneuploidy in cultured iPSCs. This chromosomal gain is particularly intriguing because it has been associated with increased proliferation and stemness, and is often detected in iPSC lines during long-term culture. By investigating transcriptomic data, we aim to explore how the extra copy of chromosome 12 alters gene expressions, and how these molecular changes contribute to altered cellular phenotypes.

Understanding the gene dosage effects of trisomy 12 in iPSCs not only provides insights into the biology of stem cell maintenance and genomic instability but also has implications for regenerative medicine and disease modeling, where genomic integrity is crucial.

## Load Required Libraries

```{r}
# Load tidyverse for wrangling, plotting, and file reading
library(tidyverse)

# Load tidymodels for modeling
library(tidymodels)

# Explicitly load recipes to ensure step_pca() is found
library(recipes)

```
## Load and Preview the RNA-seq Dataset

We load the CSV file using `read_csv()` and use `head()` and `glimpse()` to confirm successful import and examine the structure.
The dataset `BulkRNAseq_with_Chr.csv` contains normalized expression values, fold changes, statistical test results, and chromosome annotations for over 12,000 genes. Below, we load the dataset and preview the first few rows to verify that it has been imported correctly.
```{r}
# Read CSV and preview first few rows
library(readr)

rna <- read_csv("../data/BulkRNAseq_with_Chr.csv")
head(rna)

glimpse(rna)

```

## Summarize Dataset

### A. How many genes are upregulated or downregulated in trisomic iPSCs?

We define significantly upregulated genes as those with log₂ fold change ≥ log₂(1.5) and FDR-adjusted p-value < 0.05. Downregulated genes meet the same p-value threshold and log₂ fold change ≤ -log₂(1.5),comparing trisomic (P33_1, P33_2, P33_3) versus disomic (P3_1, P3_2, P3_3) iPSCs.

```{r}

# Step 1: Define thresholds
log2fc_cutoff <- log2(1.5)
padj_cutoff <- 0.05

# Step 2: Categorize genes
rna <- rna %>%
  mutate(
    Regulation = case_when(
      log2FoldChange >= log2fc_cutoff & pAdj < padj_cutoff ~ "Upregulated",
      log2FoldChange <= -log2fc_cutoff & pAdj < padj_cutoff ~ "Downregulated",
      TRUE ~ "Not Significant"
    )
  )

# Step 3: Filter out NA chromosome names and define correct chromosome order
valid_chromosomes <- c(as.character(1:22), "X", "Y")

# Step 4: Summarize data per chromosome and regulation category
reg_summary <- rna %>%
  filter(Regulation != "Not Significant", chromosome_name %in% valid_chromosomes) %>%
  mutate(chromosome_name = factor(chromosome_name, levels = valid_chromosomes)) %>%
  count(chromosome_name, Regulation) %>%
  complete(chromosome_name, Regulation, fill = list(n = 0))

# Step 5: Plot
ggplot(reg_summary, aes(x = chromosome_name, y = n, fill = Regulation)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Up- and Downregulated Genes in Trisomic vs. Disomic iPSCs by Chromosome",
    x = "Chromosome",
    y = "Number of Genes"
  ) +
  theme_minimal()

```

### B. Is there a clear clustering of iPSCs by karyotype (trisomic vs. disomic) in the principal component space?

```{r}

# Set a seed for reproducibility
set.seed(956)

# Load the data
rna <- read_csv("BulkRNAseq_with_Chr.csv")


# Extract just the numeric expression values (samples only)
expr_data <- rna %>%
  select(gene_symbol, P3_1, P3_2, P3_3, P33_1, P33_2, P33_3)

# Transpose the data: samples as rows, genes as columns
expr_long <- expr_data %>%
  pivot_longer(-gene_symbol, names_to = "Sample", values_to = "Expression") %>%
  pivot_wider(names_from = gene_symbol, values_from = Expression)

# Add group info (Disomic vs Trisomic)
expr_long <- expr_long %>%
  mutate(Group = case_when(
    str_starts(Sample, "P3_") ~ "Disomic",
    str_starts(Sample, "P33_") ~ "Trisomic"
  ))

# Build the PCA Recipe
rna_pca_recipe <- recipe(~ ., data = expr_long) %>%
  update_role(Sample, Group, new_role = "id") %>%
  step_naomit(all_predictors()) %>%
  step_normalize(all_predictors()) %>%
  step_pca(all_predictors(), id = "pca")

```
```{r}
# Prep and apply the recipe
rna_pca_prep <- prep(rna_pca_recipe, training = expr_long)
rna_pca_bake <- bake(rna_pca_prep, new_data = NULL)

```

```{r}
# View variable contributions to each PC
rna_pca_prep %>%
  tidy(id = "pca", type = "coef")

# View variance explained by each PC
rna_pca_prep %>%
  tidy(id = "pca", type = "variance")

```



```{r}
# Plot the percent of variance explained by each principal component
rna_pca_prep %>%
  tidy(id = "pca", type = "variance") %>%
  filter(terms == "percent variance") %>%
  mutate(component = as.numeric(component)) %>%  
  ggplot(aes(x = component, y = value)) +
  geom_col(fill = "steelblue") +
  ylab("% of total variance") +
  xlab("Principal Component (PC)") +
  scale_x_continuous(breaks = 1:6) +  
  geom_text(aes(label = round(value, 1)), vjust = 1.5)+
  ggtitle("Variance Explained by Principal Components") +
  theme_minimal()


```
```{r}

# Extract variance explained by PC1 and PC2
explained_var <- rna_pca_prep %>%
  tidy(id = "pca", type = "variance") %>%
  filter(terms == "percent variance") %>%
  mutate(component = as.numeric(component)) %>%
  arrange(component)

pc1_var <- explained_var$value[1]
pc2_var <- explained_var$value[2]

# Plot PCA
ggplot(rna_pca_bake, aes(x = PC1, y = PC2, color = Group)) +
  geom_point(size = 4) +
  theme_minimal() +
  labs(
    title = "PCA of Gene Expression: Trisomic vs. Disomic iPSCs",
    x = paste0("PC1 (", round(pc1_var, 1), "%)"),
    y = paste0("PC2 (", round(pc2_var, 1), "%)")
  )

 
```

### C. Volcano plot for ch-12 
```{r}

# Step 1: Filter only Chromosome 12 genes
chr12_genes <- rna %>%
  filter(chromosome_name == "12")

# Step 2: Define thresholds
log2fc_cutoff <- log2(1.5)
padj_cutoff <- 0.05

# Step 3: Categorize genes
chr12_genes <- chr12_genes %>%
  mutate(Regulation = case_when(
    log2FoldChange >= log2fc_cutoff & pAdj < padj_cutoff ~ "Upregulated",
    log2FoldChange <= -log2fc_cutoff & pAdj < padj_cutoff ~ "Downregulated",
    TRUE ~ "Not Significant"
  ))

# Step 4: Volcano plot
ggplot(chr12_genes, aes(x = log2FoldChange, y = -log10(pAdj), color = Regulation)) +
  geom_point(alpha = 0.8, size = 2) +
  scale_color_manual(values = c("Upregulated" = "magenta", "Downregulated" = "blue", "Not Significant" = "gray")) +
  geom_vline(xintercept = c(-log2fc_cutoff, log2fc_cutoff), linetype = "dashed", color = "black") +
  geom_hline(yintercept = -log10(padj_cutoff), linetype = "dashed", color = "black") +
  labs(
    title = "Volcano Plot of Chromosome 12 Genes",
    subtitle = "Trisomic vs. Disomic iPSCs",
    x = "Log2 Fold Change",
    y = "-Log10 Adjusted p-value"
  ) +
  theme_minimal()



```

```{r}
# Top 10 upregulated genes
top_up <- chr12_genes %>%
  filter(Regulation == "Upregulated") %>%
  arrange(pAdj, desc(log2FoldChange)) %>%
  slice_head(n = 10)

# Top 10 downregulated genes
top_down <- chr12_genes %>%
  filter(Regulation == "Downregulated") %>%
  arrange(pAdj, log2FoldChange) %>%
  slice_head(n = 10)

# Combine into one table
top_genes_table <- bind_rows(
  top_up %>% mutate(Direction = "Upregulated"),
  top_down %>% mutate(Direction = "Downregulated")
) %>%
  select(gene_symbol, log2FoldChange, pAdj, Direction)

# Print the table
top_genes_table

```
```{r}
library(forcats)
library(dplyr)

# Filter out genes with names starting with "ENSG" (i.e., unmapped Ensembl IDs)
top_genes_plot <- top_genes_table %>%
  filter(!grepl("^ENSG", gene_symbol)) %>%             # remove unannotated Ensembl IDs
  mutate(gene_symbol = fct_reorder(gene_symbol, log2FoldChange))  # reorder for plotting

# Plot
ggplot(top_genes_plot, aes(x = gene_symbol, y = log2FoldChange, fill = Direction)) +
  geom_col(show.legend = TRUE) +
  coord_flip() +
  scale_fill_manual(values = c("Upregulated" = "magenta", "Downregulated" = "blue")) +
  labs(
    title = "Top Upregulated and Downregulated Chr-12 Trisomic iPSC Genes",
    x = "Gene Symbol",
    y = "Log2 Fold Change"
  ) +
  theme_minimal()


```


